def start(): return (
    '*Добро пожаловать в BardicTalesAI!*\n\n'

    'В этом боте вы становитесь главным героем интерактивного повествования. '
    'Вы можете делать выборы и влиять на развитие сюжета.\n\n'

    'Чтобы начать, используйте /newgame. '
    'Нажмите /story\_settings, чтобы ввести свои настройки, '
    '/random\_settings — для случайного выбора настроек перед каждой игрой, '
    'или выберите один из готовых жанров.\n\n'

    'Настройте историю с помощью /settings и узнайте больше через /help. '
    'Наслаждайтесь созданием своей уникальной истории!'
)


def help(): return (
    '*Игра*\n'
    '/newgame - начать новую игру\n'
    '/settings - настроить параметры истории\n'
    '/info - получить основную информацию о сюжете\n'
    '/reset - сбросить настройки по умолчанию\n\n'

    '*Бот*\n'
    '/feedback - оставить отзыв или предложение\n'
    '/report - сообщить о найденном баге\n'
    '/language - выбрать язык\n'
    '/history - открыть/скрыть историю сообщений\n'
    '/cancel - отменить текущее действие'
)


def help_admin(): return (
    '*Игра*\n'
    '/newgame - начать новую игру\n'
    '/settings - настроить историю\n'
    '/info - получить основную информацию о сюжете\n'
    '/reset - сбросить настройки по умолчанию\n\n'

    '*Бот*\n'
    '/feedback - оставить отзыв или предложение\n'
    '/report - сообщить о найденном баге\n'
    '/language - выбрать язык\n'
    '/history - открыть/скрыть историю сообщений\n'
    '/cancel - отменить текущее действие\n\n'

    '*Admin mode*\n'
    '/get\_settings - получить текущие настройки\n'
    '/get\_future - получить "карту" развития сюжета\n'
    '/get\_time - получить среднее время ожидания пользователей\n'
    '/set\_gpt - переключить модель на gpt для всех пользователей (по умолчанию)\n'
    '/set\_llama - переключить модель на llama для всех пользователей \n'
    '/set\_gemini - переключить модель на gemini для всех пользователей \n'
)


def settings(): return (
    'Здесь вы можете настроить игру\n\n'
    
    '*Настройки истории*\n'
    'Опишите, героем какой истории вы бы хотели быть.\n\n'

    '*Случайные настройки*\n'
    'Устанавливает случайные настройки истории\n\n'

    '*Настройки промтов*\n'
    'Настройка промтов, которые используются при генерации истории\n\n'
)


def story_settings(): return (
    '_Героем какой истории вы бы хотели стать? '
    'Чем подробнее вы опишете свои пожелания, тем больше игра будет соответствовать им_'
)


def story_settings_finish(): return '_История настроена!_'


def prompts_settings(): return (
    '_Здесь вы можете настроить бота с помощью изменения промтов, которые тот использует_'
)


def start_prompt(): return (
    '_Введите начальный промт. '
    'Он будет использоваться для генерации начала истории_'
)


def move_prompt(): return (
    '_Введите промт генерации нового эпизода. '
    'Он будет использоваться для создания эпизодов на основе действий игрока (всех, кроме первого)_'
)


def future_prompt(): return (
    '_Введите промт для продумывания дальнейшего сюжета._'
)


def past_prompt(): return (
    '_Введите промт для сокращения прошедших событий. '
    'Полностью бот помнит только 5 последних эпизодов_'
)


def create_info_prompt(): return (
    '_Введите промт для заполнения основной информации об истории_'
)


def update_info_prompt(): return (
    '_Введите промт для обновления основной информации об истории_'
)


def templates_settings(): return (
    '_Здесь вы можете настроить бота с помощью изменения шаблонов, которые тот использует_'
)


def start_template(): return '_Введите шаблон для первого эпизода_'
def move_template(): return '_Введите шаблон для эпизода_'
def future_template(): return '_Введите шаблон для продумывания дальнейшего сюжета_'
def past_template(): return '_Введите промт для хранения предыдущих событий_'
def info_template(): return '_Введите шаблон для хранения основной информации об истории_'


def edit_prompt(): return '_Промт изменён_'
def edit_template(): return '_Шаблон изменён_'
def advanced_settings_finish(): return '_Промты настроены_'


def feedback(): return '_Поделитесь своими мыслями или предложениями, чтобы помочь нам улучшить бота_'
def feedback_thanks(): return '_Спасибо за отзыв!_'
def report(): return '_Пожалуйста, расскажите о найденной ошибке_'
def report_thanks(): return'_Спасибо за помощь!_'


def language(): return (
    '_Здесь вы можете настроить язык игры. '
    'Обратите внимание, что лучше всего бот работает на английском языке!_'
)
def new_language(): return '_Установлен русский язык_'


def history(): return (
    '_Здесь вы можете открыть (по умолчанию) или скрыть историю диалога с ботом. '
    'Оставляя историю открытой, вы помогаете нам развивать бота!_'
)
def open_history(): return '_Режим инкогнито: выключен_'
def hide_history(): return '_Режим инкогнито: включен_'


def reset(): return '_Настройки сброшены_'
def cancel(): return '_Действие отменено_'
def nogame(): return '_Начните игру!_'


def admin_success(): return '_Admin mode: включен_'
def admin_fail(): return '_ДОСТУП ЗАПРЕЩЕН_'
def admin_bye(): return '_Admin mode: выключен_'
def not_generate(): return 'Ещё не сгенерировано'
def old_information(): return 'ИНФОРМАЦИЯ НЕАКТУАЛЬНА'


def gpt(): return '_Модель изменена на gpt_'
def llama(): return '_Модель изменена на llama_'
def gemini(): return '_Модель изменена на gemini_'


def wait(): return (
    '_Пожалуйста, подождите, пока ИИ сгенерирует ответ. '
    'Это может занять некоторое время_'
)


def wait_strong(): return (
    '_Пожалуйста, подождите, пока ИИ сгенерирует ответ. '
    'Это может занять некоторое время!_'
)


def error(): return (
    f'_Произошла ошибка! Пожалуйста, попробуйте ещё!_'
)


def unknown_command(): return (
    f'_Неизвестная команда_'
)
