def start(): return (
    '*Добро пожаловать в BardicTalesAI!*\n\n'
    
    'В этом боте вы становитесь главным героем интерактивного повествования. '
    'Вы можете делать выборы и влиять на развитие сюжета.\n\n'

    'Чтобы начать, используйте /newgame. '
    'Настройте историю с помощью /settings и узнайте больше через /help. '
    'Наслаждайтесь созданием своей уникальной истории!'
)


def help(): return (
    '*Игра*\n'
    '/newgame - начать новую игру\n'
    '/settings - настроить параметры истории\n'
    '/info - получить основную информацию о сюжете\n'
    '/reset - сбросить настройки по умолчанию\n\n'

    '*Бот*\n'
    '/feedback - оставить отзыв или предложение\n'
    '/report - сообщить о найденном баге\n'
    '/language - выбрать язык\n'
    '/history - открыть/скрыть историю сообщений\n'
    '/cancel - отменить текущее действие'
)


def help_admin(): return (
    '*Игра*\n'
    '/newgame - начать новую игру\n'
    '/settings - настроить параметры истории\n'
    '/info - получить основную информацию о сюжете\n'
    '/censorship - установить уровень цензуры\n'
    '/reset - сбросить настройки по умолчанию\n\n'

    '*Бот*\n'
    '/feedback - оставить отзыв или предложение\n'
    '/report - сообщить о найденном баге\n'
    '/language - выбрать язык\n'
    '/history - открыть/скрыть историю сообщений\n'
    '/cancel - отменить текущее действие\n\n'

    '*Admin mode*\n'
    '/get\_time - получить среднее время ожидания пользователей\n'
    '/get\_settings - получить текущие настройки'
)


def settings(): return (
    'Здесь вы можете настроить игру\n\n'
    
    '*Базовые настройки*\n'
    'Опишите, героем какой истории вы бы хотели быть.\n\n'

    '*Случайные настройки*\n'
    'Устанавливает случайные базовые настройки\n\n'

    # '*Расширенные настройки*\n'
    # 'Настройка промтов\n\n'
)


def basic_start(): return (
    '_Героем какой истории вы бы хотели стать? '
    'Чем подробнее вы опишете свои пожелания, тем больше игра будет соответствовать им._'
)


def basic_finish(): return '_История настроена!_'


def start_prompt(): return (
    '_Введите начальный промт. '
    'Он будет использоваться для генерации начала истории. '
    'Если хотите пропустить этот шаг, отправьте "-"_'
)


def move_prompt(): return (
    '_Введите промт генерации нового эпизода. '
    'Он будет использоваться для создания эпизодов на основе действий игрока (всех, кроме первого). '
    'Если хотите пропустить этот шаг, отправьте "-"_'
)


def rule_prompt(): return (
    '_Опишите правила, ограничивающие возможности игрока '
    '(по умолчанию игрок может управлять только своим персонажем и '
    'использовать только то, что упоминалось в истории). '
    'Если хотите пропустить этот шаг, отправьте "-"_'
)


def prompts_finish(): return '_Расширенные настройки установлены_'


def feedback(): return '_Поделитесь своими мыслями или предложениями, чтобы помочь нам улучшить бота_'
def feedback_thanks(): return '_Спасибо за отзыв!_'
def bug_report(): return '_Пожалуйста, расскажите о найденной ошибке_'
def bug_report_thanks(): return'_Спасибо за помощь!_'


def language(): return (
    '_Здесь вы можете настроить язык игры. '
    'Обратите внимание, что лучше всего бот работает на английском языке!_'
)
def new_language(): return '_Установлен русский язык_'


def censorship(): return (
    '_Здесь вы можете переключаться между моделью с цензурой (по умолчанию) и без цензуры. '
    'Модель без цензуры работает дольше и менее качественно, чем основная модель!_'
)
def enable_censorship(): return '_Выбрана модель с цензурой_'
def disable_censorship(): return '_Выбрана модель без цензуры_'


def history(): return (
    '_Здесь вы можете открыть (по умолчанию) или скрыть историю диалога с ботом. '
    'Оставляя историю открытой, вы помогаете нам развивать бота!_'
)
def open_history(): return '_Режим инкогнито: выключен_'
def hide_history(): return '_Режим инкогнито: включен_'


def reset(): return '_Настройки сброшены_'
def cancel(): return '_Действие отменено_'
def nogame(): return '_Начните игру!_'


def admin_success(): return '_Admin mode: включен_'
def admin_fail(): return '_ДОСТУП ЗАПРЕЩЕН_'
def admin_bye(): return '_Admin mode: выключен_'
def not_generate(): return 'Ещё не сгенерировано'
def old_information(): return 'ИНФОРМАЦИЯ НЕАКТУАЛЬНА'


def openai(): return '_API изменён на OpenAI_'
def groq(): return '_API изменён на Groq_'
def ollama(): return '_API изменён на Ollama_'


def wait(): return (
    '_Пожалуйста, подождите, пока ИИ сгенерирует ответ. '
    'Это может занять некоторое время._'
)


def wait_strong(): return (
    '_Пожалуйста, подождите, пока ИИ сгенерирует ответ. '
    'Это может занять некоторое время!_'
)


def error(): return (
    f'_Произошла ошибка! Пожалуйста, попробуйте ещё!_'
)
