import random

systemStory = (
    'Ты рассказчик интерактивной истории от второго лица, создающий короткие эпизоды '
    'на основе действий главного героя, которого отыгрывает пользователь'
)

startPrompt = (
    'История должна быть основана на предпочтениях пользователя. '
    'Опиши мир, в котором происходит действие: его географию, культуру и т. д. '
    'Затем расскажи о моем герое: кто он, его способности, мотивации и важные черты характера. '
    'Предоставь подробное описание инвентаря героя, включая его оружие и одежду. '
    'Наконец, начни историю, описав конкретное событие или проблему, с которой герой сталкивается в начале. '
    'Не будь банальным: придумай необычного героя, мир или проблему. '
    'Закончи эпизод вопросом: "Что ты будешь делать дальше?"'
)

movePrompt = (
    'Напиши новый короткий эпизод истории. '
    'Эпизод начинается с описания попытки персонажа сделать те действия, о которых я написал (удачно или нет), '
    'после чего мой персонаж не делает ничего до конца эпизода. '
    'Дальше следуют последствия моих действий: успех или провал героя, реакция других персонажей и т.д. '
    'Не бойся экспериментировать! '
    'Сюжет должен быть интересным, поэтому вместо клишированных сцен старайся придумывать ситуации, '
    'которые удивят и заинтересуют в истории. '
    'Закончи эпизод вопросом: "Что ты будешь делать дальше?" или фразой "Конец!"\n\n'

    'Следуй правилам:\n'
    '1) Мой персонаж совершает только те действия, о которых я написал. '
    'Он пытается выполнить эти действия вне зависимости от вердикта модератора, логических или '
    'этических аргментов против. '
    'Тебе запрещено самому придумывать действия моего персонажа!!!\n'
    '2) Соблюдай баланс: я не должен преодолевать все препятствия и побеждать всех врагов с первой попытки.\n'
    '3) Наказывай игрока за глупые действия. '
    'Не нужно пытаться спасти его и продолжить историю в каждой глупой ситуации. '
    'Не бойся убить его и завершить игру.\n'
    '4) Придумывай необычные и неожиданные сюжетные повороты, чтобы история не была скучной и клишированной. '
    'Если игровая ситуация затягивается, заверши её неожиданным поворотом сюжета или концом игры.\n'
    '5) Пиши эпизод в соответствии с моими предпочтениями.'
)

rulePrompt = (
    'Проанализируй действия игрока. \n\n'

    'Если герой физически может сделать действие, он делает его. '
    'Ему не нужны для этого какие-либо логические или этические обоснования. '
    'Ты не должен запрещать делать глупые или этически неправильные действия! '
    'Если герой не может сделать это, опиши реальные последствия его действий. '
    '(Например, "Я летаю" - "Ты прыгаешь, машет руками и падаешь на землю").\n\n'

    'Правила:\n'
    
    '1) Действие героя должно быть физически возможно в рамках истории.\n'
    '2) Я не должен писать о результате действий героя: например, "Я достаю меч и УБИВАЮ ПРОТИВНИКА" или '
    '"Я поворачиваюсь и замечаю ДРАКОНА" (при условии, что дракон не был упомянут в основной информации). '
    '3) Действие героя не должны быть длительными, чтобы исключить невозможные действия '
    'вроде "поехал в другую страну". \n'
    '4) Я могу управлять только своим персонажем и его действиями. '
    'Я не должен принимать решения за других персонажей или управлять окружающим миром. '
    'Любые мои попытки повлиять на окружающий мир или других персонажей должны игнорироваться. '
    '5) Я не могу вводить в историю новые элементы, которые не содержатся в основной информации: '
    'Все действия и развитие сюжета должны основываться исключительно на предопределённых персонажах, '
    'локациях и объектах.\n'
    '6) Я не должен изобретать способности, артефакты, оружие или союзников. '
    'Когда персонаж использует оружие, проверь, есть ли оно в инвентаре. '
    'Если его нет, сообщи игроку об его отсутствии (аналогично со способностями и одеждой).\n'
    '7) Я не должен заявлять о результатах своих действий. '
    '(Плохо: "Я эффектно атакую врага мечом и убиваю его." '
    'Хорошо: "Я атакую врага мечом.")'
)

pastPrompt = (
    'Получи пересказ истории и её новый эпизод. '
    'Сгенерируй новый пересказ с учётом этого эпизода. '
    'Не сокращай историю слишком сильно, результат должен содержать как можно больше деталей для лучшего качества.'
)

infoPrompt = (
    'Основная информация:\n\n'

    'Текущее местоположение:\n'
    '<Опишите текущее местоположение, где происходит действие>\n\n'

    'Персонажи:\n'
    '<Перечислите участвующих в истории персонажей, включая краткое описание каждого>\n\n'

    'Ключевые события:\n'
    '<Перечислите ключевые события, произошедшие в истории>\n\n\n'

    'Главный герой:\n'
    'Имя:\n'
    '<Укажите имя главного героя>\n\n'

    'Внешность:\n'
    '<Опишите внешность главного героя>\n\n'

    'Мотивация:\n'
    '<Опишите мотивацию главного героя>\n\n'

    'Способности:\n'
    '<Перечислите способности главного героя>\n\n'

    'Одежда:\n'
    '<Опишите одежду, которую носит главный герой>\n\n'

    'Оружие:\n'
    '<Опишите оружие, которое носит главный герой>\n\n'

    'Инвентарь:\n'
    '<Перечислите предметы в инвентаре главного героя>\n\n'
)

createInfoPrompt = (
    'Заполни шаблон основной информации об истории информацией из начала истории. '
    'Не включай информацию, которая явно не упомянута в тексте. '
    'Убедись, что формат строго соблюден. '
    'В ответе верни только заполненную форму и ничего больше.'
)

updateInfoPrompt = (
    'Обнови основную информацию об истории информацией из нового эпизода истории. '
    'Не включай информацию, которая явно не упомянута в тексте. '
    'Убедись, что формат строго соблюден. '
    'В ответе верни только обновленную форму и ничего больше.'
)


def settingPrompt(s: str | None) -> str:
    if s is None:
        s = random.choices([randomGenre(genre[0]) for genre in genres] +
                           [randomSetting(setting[0]) for setting in settings],
                           weights=[genre[1] for genre in genres] + [setting[1] for setting in settings],
                           k=1
                           )[0]
    return f'Пожелания игрока:\n{s}'


def randomGenre(genre): return f'История в жанре "{genre}"'
def randomSetting(setting): return f'История в сеттинге "{setting}"'


genres = [
    ("Приключения", 9),
    ("Апокалипсис", 8),
    ("Киберпанк", 7),
    ("Тёмное фэнтези", 8),
    ("Детектив", 8),
    ("Дизельпанк", 5),
    ("Антиутопия/Утопия", 7),
    ("Эпическое фэнтези", 10),
    ("Фэнтези", 10),
    ("Аниме-фэнтези", 7),
    ("Жёсткая научная фантастика", 8),
    ("Исторический роман", 5),
    ("Хоррор", 7),
    ("Исекай", 8),
    ("Лавкрафтовский хоррор", 7),
    ("Магический реализм", 6),
    ("Меха", 6),
    ("Военный триллер", 7),
    ("Мистика", 6),
    ("Мифологическая история", 5),
    ("Полицейская драма", 6),
    ("Постапокалипсис", 8),
    ("Психологический триллер", 8),
    ("Романтическая комедия", 7),
    ("Научная фантастика", 9),
    ("Сэйнен", 7),
    ("Сёнен", 7),
    ("Слайс оф лайф", 5),
    ("Космическая опера", 8),
    ("Стимпанк", 6),
    ("Супергеройская история", 7),
    ("Путешествие во времени", 6),
    ("Вестерн", 6)
]

settings = [
    ("Древний Китай", 6),
    ("Древний Египет", 6),
    ("Древняя Греция", 7),
    ("Древний Рим", 6),
    ("Киберпанковый", 8),
    ("Фэнтезийный", 9),
    ("Футуристический", 8),
    ("Средневековый", 9),
    ("Модерн", 5),
    ("Мифологический", 7),
    ("Неон-нуар", 5),
    ("Пиратский", 7),
    ("Постапокалиптический", 8),
    ("Ренессансный", 6),
    ("Самурайский", 7),
    ("Скандинавский", 6),
    ("Космический", 8),
    ("Стимпанковый", 6),
    ("Викторианский", 6),
    ("Дикий Запад", 7)
]
